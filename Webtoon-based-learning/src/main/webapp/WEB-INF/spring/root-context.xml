<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	                                	                                	                                	                                	                                
	<!-- Root Context: defines shared resources visible to all other web components -->
		
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"/>
		<property name="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="comic"/>
		<property name="password" value="1234"/>
	</bean>
	
	
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig"/>
	</bean>
	
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		 <property name="configLocation" value="classpath:/mybatis-config.xml"/>
		 <property name="mapperLocations" value="classpath:/com/comic/mapper/*.xml"/>
	</bean>
	
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>	
	
	
	<bean id="transactionManager" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>	
	</bean>
	
	
	<aop:aspectj-autoproxy/>
	
	
	<tx:annotation-driven/>
	
	
	<bean id="userAccessMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.comic.mapper.UserAccessMapper"/>
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"/>
	</bean>
	
	<bean id="contentRegisterMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.comic.mapper.ContentRegisterMapper"/>
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"/>
	</bean>
	
	<bean id="webtoonContentMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.comic.mapper.WebtoonContentMapper"/>
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"/>
	</bean>
	
	
	
	<bean id="userAccessService" class="com.comic.service.UserAccessServiceImpl">
		<constructor-arg ref="userAccessMapper"/>
	</bean>	
	
	<bean id="contentRegisterService" class="com.comic.service.ContentRegisterServiceImpl">
		<constructor-arg ref="contentRegisterMapper"/>
	</bean>
	
	<bean id="webtoonContentService" class="com.comic.service.WebtoonContentServiceImpl">
		<constructor-arg ref="webtoonContentMapper"/>
	</bean>
	
	
	<context:component-scan base-package="com.comic.service"></context:component-scan>
	
</beans>
